n = int(input()) # 길이 n

dp = [[0] * 10 for _ in range(n + 1)]
dp[1] = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1]
    
for i in range(2, n + 1):
    for j in range(10):
        if j == 0: # 뒷자리가 0일 떄, 앞에 1만 올 수 있음
            dp[i][j] = dp[i - 1][j + 1]
        elif j == 9: # 뒷자리가 9일 때는 앞에 8만 올 수 있음
            dp[i][j] = dp[i - 1][j - 1]
        else: # 뒷자리가 2 ~ 8( = k)일 때는 앞에 숫자가 (k - 1) 또는 (k + 1) 두개가 올 수 있음
            dp[i][j] = dp[i - 1][j - 1] + dp[i - 1][j + 1]

print(sum(dp[n]) % 1000000000)

# 10의 자리가 3이라면 1의 자리는 2 또는 4가 올 수 있으므로 dp[2][3] = 2 가 되고,
# 10의 자리가 5라면 1의 자리는 4 또는 6이 올 수 있으므로 dp[2][5] = 2 가 된다.
# 이때 100의 자리가 4라면 10의 자리는 3 또는 5가 올 수 있으므로

# dp[2][3] = dp[1][2] + dp[1][4]
# dp[2][5] = dp[1][4] + dp[1][6]
# dp[3][4] = dp[2][3] + d[2][5]가 된다.

# dp[i][j] = dp[i - 1][j - 1] + dp[i - 1][j + 1]

# 하지만 dp[i][9]의 경우 dp[i - 1][8] 밖에 올 수 없고,
# dp[i][0]의 경우 dp[i - 1][1] 밖에 올 수 없음.

# dp[i][9] = dp[i - 1][j - 1]
# dp[i][0] = dp[i - 1][j + 1]